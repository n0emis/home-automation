---
synapse_database_host: "localhost"
synapse_database_database: "synapse"
synapse_database_user: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/synapse/db subkey=user') }}"
synapse_database_password: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/synapse/db') }}"
synapse_registration_shared_secret: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/synapse/registration') }}"
synapse_macaroon_secret_key: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/synapse/macaroon') }}"
synapse_form_secret: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/synapse/form') }}"
synapse_signing_key: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/synapse/signing') }}"
synapse_allow_public_rooms_over_federation: true
synapse_enable_group_creation: true
synapse_enable_registration: false
synapse_domain: "noemis.me"
synapse_server_fqdn_matrix: "matrix.{{ synapse_domain }}"

synapse_http_listener_enabled: false
synapse_federation_listener_enabled: false
synapse_http_listener_port: '85'
synapse_additional_listeners: |
  # Unsecure HTTP listener (Client API): for when matrix traffic passes through a reverse proxy
  # that unwraps TLS.
  - port: {{ synapse_http_listener_port }}
    tls: false
    bind_addresses: ['::1', '127.0.0.1']
    type: http
    x_forwarded: true

    resources:
      - names: [client,federation]
        compress: false

    additional_resources:
      "/_matrix/saml2/pick_username":
        module: "matrix_synapse_saml_mapper.pick_username_resource"

synapse_allow_guest_access: true

synapse_pip_version: "1.20.1"
synapse_pip_packages_additional:
  - "git+https://github.com/chaos-jetzt/matrix-synapse-saml-mapper"

synapse_app_service_config_files:
  - "{{ matrix_appservice_irc_config_path }}/registration.yaml"
  - "{{ mautrix_telegram_config_path }}/registration.yaml"
  #- /root/mautrix-whatsapp/registration.yaml

synapse_homeserver_config_extra_options: |
  user_directory:
    enabled: true
    search_all_users: true

  saml2_config:
    enabled: true
    sp_config:
      metadata:
        remote:
          - url: https://auth.n0emis.eu/auth/realms/n0emis/protocol/saml/descriptor
    user_mapping_provider:
      module: "matrix_synapse_saml_mapper.SamlMappingProvider"

  sso:
    client_whitelist:
      - "https://noemis.me/"

synapse_turn_uris:
  - "turn:turn.n0emis.eu:3479?transport=udp"
  - "turn:turn.n0emis.eu:3479?transport=tcp"
  - "turns:turn.n0emis.eu:3479?transport=udp"
  - "turns:turn.n0emis.eu:3479?transport=tcp"

synapse_turn_shared_secret: "{{ coturn_static_auth_secret }}"
synapse_turn_allow_guests: True
coturn_tls: True
coturn_tls_cert: /etc/ssl/certs/turn.n0emis.eu.crt
coturn_tls_key: /etc/ssl/private/turn.n0emis.eu.key

## Bridges/Appservices
mautrix_telegram_config_path: "/etc/mautrix-telegram"
mautrix_telegram_homeserver_domain: "noemis.me"
mautrix_telegram_as_token: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/mautrix-telegram subkey=as_token') }}"
mautrix_telegram_hs_token: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/mautrix-telegram subkey=hs_token') }}"
mautrix_telegram_api_id: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/mautrix-telegram/api subkey=user') }}"
mautrix_telegram_api_hash: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/mautrix-telegram/api') }}"
mautrix_telegram_permissions:
  "*": "relaybot"
  "noemis.me": "full"
  "@n0emis:noemis.me": "admin"

matrix_appservice_irc_config_path: "/etc/matrix-appservice-irc"
matrix_appservice_irc_id: "a82860dfb161240da86e462378c6777b5aff89fbe881e189d892f87b4822b2c2"
matrix_appservice_irc_as_token: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/matrix-appservice-irc subkey=as_token') }}"
matrix_appservice_irc_hs_token: "{{ lookup('passwordstore', 'infra/' + ansible_fqdn + '/matrix-appservice-irc subkey=hs_token') }}"
